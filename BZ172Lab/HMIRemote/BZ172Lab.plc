PROGRAM PageDraw WITH Draw;
PROGRAM PageRefresh WITH Refresh;

	(***************************)
	(*                         *)
	(*     GLOBAL VARIABLES    *)
	(*                         *)
	(***************************)

VAR_GLOBAL

	{G:"Call stack"}
	giStackPtr : INT := -1;
	guiCallStack : ARRAY[ 0..9 ] OF UINT;

	{G:"Sets"}
	$PagIndex : UINT;
	$PagNumber : UINT;
	$waitRefresh : BOOL;

	{G:"TempSyncByCAN_vars"}
	fbTempSyncByCAN : DrawTempSyncByCAN;
	fbRefrTempSyncByCAN : RefrTempSyncByCAN;
	fbTempSyncByCANEdit_7 : EditBox01 := (x1:=18, y1:=8, x2:=47, y2:=15, pFont:=?EWP2_6x8, bckCol:=16777215, bordPts:=1, pVar:=16#00209000, order:=1, pVisVar:=1, foreSelCol:=16777215, refr:=TRUE, type:=tyInt, format:=16#0000000C, pCanSel:=1);
	fbTempSyncByCANEdit_8 : EditBox01 := (wHnd:=1, x1:=18, y1:=24, x2:=47, y2:=31, pFont:=?EWP2_6x8, bckCol:=16777215, bordPts:=1, pVar:=16#00209100, order:=2, pVisVar:=1, foreSelCol:=16777215, refr:=TRUE, type:=tyInt, format:=16#0000000C, pCanSel:=1);
	fbTempSyncByCANEdit_9 : EditBox01 := (wHnd:=2, x1:=18, y1:=40, x2:=47, y2:=47, pFont:=?EWP2_6x8, bckCol:=16777215, bordPts:=1, pVar:=16#00209200, order:=3, pVisVar:=1, foreSelCol:=16777215, refr:=TRUE, type:=tyInt, format:=16#0000000C, pCanSel:=1);
	fbTempSyncByCANEdit_10 : EditBox01 := (wHnd:=3, x1:=84, y1:=24, x2:=113, y2:=31, pFont:=?EWP2_6x8, bckCol:=16777215, bordPts:=1, pVar:=16#002AD100, order:=4, pVisVar:=1, foreSelCol:=16777215, refr:=TRUE, type:=tyInt, format:=16#0000000C, pCanSel:=1);
	fbTempSyncByCANEdit_11 : EditBox01 := (wHnd:=4, x1:=84, y1:=8, x2:=113, y2:=15, pFont:=?EWP2_6x8, bckCol:=16777215, bordPts:=1, pVar:=16#002AD000, order:=5, pVisVar:=1, foreSelCol:=16777215, refr:=TRUE, type:=tyInt, format:=16#0000000C, pCanSel:=1);
	fbTempSyncByCANEdit_12 : EditBox01 := (wHnd:=5, x1:=84, y1:=40, x2:=113, y2:=47, pFont:=?EWP2_6x8, bckCol:=16777215, bordPts:=1, pVar:=16#002AD200, order:=6, pVisVar:=1, foreSelCol:=16777215, refr:=TRUE, type:=tyInt, format:=16#0000000C, pCanSel:=1);

	{G:"ModeSelection_vars"}
	fbModeSelection : DrawModeSelection;
	fbRefrModeSelection : RefrModeSelection;
	fbModeSelectionEdit_1 : EditBox01 := (wHnd:=6, y1:=8, x2:=127, y2:=23, pFont:=?EWP2_8x16, bckCol:=16777215, rw:=TRUE, pVar:=16#00368700, order:=2, pVisVar:=1, foreSelCol:=16777215, refr:=TRUE, type:=tyBool, enumId:=1, format:=16#00000014);
	ModeSelection_tmpBOOL : BOOL;

END_VAR

	(***************************)
	(*                         *)
	(*        CONSTANTS        *)
	(*                         *)
	(***************************)

VAR_GLOBAL CONSTANT

	{G:"Fonts"}
	EWP2_6x8_len : USINT := 6;
	EWP2_6x8_hei : USINT := 8;
	EWP2_6x8_offs : USINT := 0;
	EWP2_6x8 : ARRAY[ 0..1693 ] OF BYTE := 0,6,8,0,211,1,0,32,0,33,0,34,0,35,0,36,
				0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,
				0,45,0,46,0,47,0,48,0,49,0,50,0,51,0,52,
				0,53,0,54,0,55,0,56,0,57,0,58,0,59,0,60,
				0,61,0,62,0,63,0,64,0,65,0,66,0,67,0,68,
				0,69,0,70,0,71,0,72,0,73,0,74,0,75,0,76,
				0,77,0,78,0,79,0,80,0,81,0,82,0,83,0,84,
				0,85,0,86,0,87,0,88,0,89,0,90,0,91,0,92,
				0,93,0,94,0,95,0,96,0,97,0,98,0,99,0,100,
				0,101,0,102,0,103,0,104,0,105,0,106,0,107,0,108,
				0,109,0,110,0,111,0,112,0,113,0,114,0,115,0,116,
				0,117,0,118,0,119,0,120,0,121,0,122,0,123,0,124,
				0,125,0,126,0,127,0,161,0,176,0,191,0,196,0,199,
				0,214,0,220,0,223,0,224,0,225,0,228,0,231,0,232,
				0,233,0,234,0,235,0,236,0,237,0,238,0,239,0,241,
				0,242,0,243,0,244,0,246,0,249,0,250,0,251,0,252,
				1,30,1,48,1,94,4,48,4,49,4,50,4,51,4,52,
				4,53,4,54,4,55,4,56,4,57,4,58,4,59,4,60,
				4,61,4,62,4,63,4,64,4,65,4,66,4,67,4,68,
				4,69,4,70,4,71,4,72,4,73,4,74,4,75,4,76,
				4,77,4,78,4,79,4,16,4,17,4,18,4,19,4,20,
				4,21,4,22,4,23,4,24,4,25,4,26,4,27,4,28,
				4,29,4,30,4,31,4,32,4,33,4,34,4,35,4,36,
				4,37,4,38,4,39,4,40,4,41,4,42,4,43,4,44,
				4,45,4,46,4,47,1,31,1,49,1,95,0,205,0,227,
				0,226,0,195,0,194,0,193,0,192,0,201,0,200,0,211,
				0,213,0,245,0,218,0,209,0,202,0,204,9(0),79,4(0),7,
				0,7,0,0,20,127,20,127,20,0,36,42,127,42,18,35,
				19,8,100,98,0,0,54,73,85,34,80,0,0,5,3,4(0),
				28,34,65,3(0),65,34,28,0,0,20,8,62,8,20,0,8,
				8,62,8,8,0,0,80,48,0,0,5(8),3(0),96,96,0,0,
				32,16,8,4,2,0,62,81,73,69,62,0,0,66,127,64,
				0,0,66,97,81,73,70,0,33,65,69,75,49,0,24,20,
				18,127,16,0,39,3(69),57,0,60,74,73,73,49,0,1,113,
				9,5,3,0,54,3(73),54,0,6,73,73,41,30,0,0,54,
				54,4(0),86,54,3(0),8,20,34,65,0,0,5(20),0,0,65,34,
				20,8,0,2,1,81,9,6,0,50,73,121,65,62,0,126,
				3(17),126,0,127,3(73),54,0,62,3(65),34,0,127,65,65,34,28,
				0,127,3(73),65,0,127,3(9),1,0,62,65,73,73,122,0,127,
				3(8),127,0,0,65,127,65,0,0,32,64,65,63,1,0,127,
				8,20,34,65,0,127,4(64),0,127,2,12,2,127,0,127,4,
				8,16,127,0,62,3(65),62,0,127,3(9),6,0,62,65,81,33,
				94,0,127,9,25,41,70,0,70,3(73),49,0,1,1,127,1,
				1,0,63,3(64),63,0,31,32,64,32,31,0,63,64,56,64,
				63,0,99,20,8,20,99,0,7,8,112,8,7,0,97,81,
				73,69,67,0,0,127,65,65,0,0,2,4,8,16,32,0,
				0,65,65,127,0,0,4,2,1,2,4,0,5(64),0,0,1,
				2,4,0,0,32,3(84),120,0,127,72,68,68,56,0,56,3(68),
				32,0,48,72,72,80,127,0,56,3(84),24,0,8,126,9,1,
				2,0,12,3(82),62,0,127,8,4,4,120,0,0,68,125,64,
				0,0,32,64,68,61,0,0,127,16,40,68,3(0),65,127,64,
				0,0,124,4,24,4,120,0,124,8,4,4,120,0,56,3(68),
				56,0,124,3(20),8,0,8,20,20,24,124,0,124,8,4,4,
				8,0,72,3(84),32,0,4,63,68,64,32,0,60,64,64,32,
				124,0,28,32,64,32,28,0,60,64,48,64,60,0,68,40,
				16,40,68,0,12,3(80),60,0,68,100,84,76,68,0,0,8,
				54,65,4(0),119,4(0),65,54,8,0,0,6,1,30,32,24,0,
				0,9,5,251,40,3(0),244,3(0),6,9,9,6,3(0),96,144,138,
				64,0,120,37,36,37,120,0,30,161,225,33,18,0,60,67,
				66,67,60,0,60,65,64,65,60,0,126,33,69,74,48,0,
				40,85,86,120,64,0,34,85,84,56,64,0,41,84,84,57,
				64,0,24,164,228,36,0,0,56,85,86,88,0,0,56,84,
				84,90,1,0,56,86,85,86,24,0,56,85,84,85,24,0,
				0,73,122,64,4(0),122,1,3(0),2,121,2,3(0),1,124,1,0,
				0,124,10,5,6,121,0,56,68,68,69,58,0,56,68,70,
				69,56,0,48,74,73,74,48,0,48,74,72,74,48,0,0,
				56,65,66,56,64,0,56,66,65,56,64,56,66,65,58,64,
				0,56,66,64,58,64,0,56,69,70,85,52,3(0),125,3(0),34,
				165,229,37,25,0,32,3(84),120,0,124,84,84,32,0,0,124,
				84,84,40,0,0,124,4,4,12,0,0,96,56,36,60,96,
				0,56,3(84),24,0,108,16,124,16,108,0,40,68,84,40,0,
				0,124,32,16,8,124,0,124,33,18,9,124,0,124,16,24,
				100,0,0,64,56,4,124,0,0,124,8,16,8,124,0,124,
				16,16,124,0,0,56,68,68,56,0,0,124,4,4,124,0,
				0,252,36,36,24,0,0,56,68,68,40,0,0,4,4,124,
				4,4,0,76,80,48,12,0,0,24,36,124,36,24,0,68,
				40,16,40,68,0,124,64,64,124,128,0,12,16,16,124,0,
				0,124,64,120,64,124,0,124,64,120,64,252,0,4,124,80,
				80,32,0,124,80,80,32,124,0,124,80,80,32,0,0,68,
				84,84,56,0,0,124,16,56,68,56,0,64,40,20,20,124,
				0,126,3(17),126,0,127,3(69),57,0,127,3(73),54,0,127,3(1),3,
				0,96,62,33,63,96,0,127,3(73),65,0,119,8,127,8,119,
				0,34,3(73),54,0,127,16,8,4,127,0,127,16,9,4,127,
				0,127,8,22,33,65,0,64,62,1,1,127,0,127,2,12,
				2,127,0,127,3(8),127,0,62,3(65),62,0,127,3(1),127,0,127,
				3(9),6,0,62,3(65),34,0,1,1,127,1,1,0,71,3(72),63,
				0,28,34,127,34,28,0,99,20,8,20,99,0,127,64,64,
				127,192,0,7,3(8),127,0,127,64,127,64,127,0,127,64,127,
				64,255,0,1,127,72,72,48,0,127,72,48,0,127,0,127,
				3(72),48,0,34,3(73),62,0,127,8,62,65,62,0,70,41,25,
				9,127,0,24,165,166,165,124,0,0,68,124,64,0,0,36,
				170,234,42,16,0,0,68,126,69,0,0,34,85,86,57,64,
				0,32,86,85,86,120,0,122,37,38,37,120,0,120,38,37,
				38,120,0,120,36,38,37,120,0,120,37,38,36,120,0,124,
				86,85,68,0,0,124,85,86,68,0,0,56,68,70,69,56,
				0,58,69,70,69,56,0,52,74,76,74,48,0,60,64,66,
				65,60,0,124,10,17,34,125,0,124,86,85,70,3(0),69,126,
				68,0,0;
	EWP2_8x16_len : USINT := 8;
	EWP2_8x16_hei : USINT := 16;
	EWP2_8x16_offs : USINT := 0;
	EWP2_8x16 : ARRAY[ 0..7565 ] OF BYTE := 0,8,16,1,164,2,0,32,0,33,0,34,0,35,0,36,
				0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,
				0,45,0,46,0,47,0,48,0,49,0,50,0,51,0,52,
				0,53,0,54,0,55,0,56,0,57,0,58,0,59,0,60,
				0,61,0,62,0,63,0,64,0,65,0,66,0,67,0,68,
				0,69,0,70,0,71,0,72,0,73,0,74,0,75,0,76,
				0,77,0,78,0,79,0,80,0,81,0,82,0,83,0,84,
				0,85,0,86,0,87,0,88,0,89,0,90,0,91,0,92,
				0,93,0,94,0,95,0,96,0,97,0,98,0,99,0,100,
				0,101,0,102,0,103,0,104,0,105,0,106,0,107,0,108,
				0,109,0,110,0,111,0,112,0,113,0,114,0,115,0,116,
				0,117,0,118,0,119,0,120,0,121,0,122,0,123,0,124,
				0,125,0,126,0,160,0,161,0,162,0,163,0,164,0,165,
				0,166,0,167,0,168,0,169,0,170,0,171,0,172,0,173,
				0,174,0,175,0,176,0,177,0,178,0,179,0,180,0,181,
				0,182,0,183,0,184,0,185,0,186,0,187,0,188,0,189,
				0,190,0,191,0,192,0,193,0,194,0,195,0,196,0,197,
				0,198,0,199,0,200,0,201,0,202,0,203,0,204,0,205,
				0,206,0,207,0,208,0,209,0,210,0,211,0,212,0,213,
				0,214,0,215,0,216,0,217,0,218,0,219,0,220,0,221,
				0,222,0,223,0,224,0,225,0,226,0,227,0,228,0,229,
				0,230,0,231,0,232,0,233,0,234,0,235,0,236,0,237,
				0,238,0,239,0,240,0,241,0,242,0,243,0,244,0,245,
				0,246,0,247,0,248,0,249,0,250,0,251,0,252,0,253,
				0,254,0,255,1,0,3(1),2,1,3,1,4,1,5,1,6,
				1,7,1,8,1,9,1,10,1,11,1,12,1,13,1,14,
				1,15,1,16,1,17,1,18,1,19,1,20,1,21,1,22,
				1,23,1,24,1,25,1,26,1,27,1,28,1,29,1,30,
				1,31,1,32,1,33,1,34,1,35,1,36,1,37,1,38,
				1,39,1,40,1,41,1,42,1,43,1,44,1,45,1,46,
				1,47,1,48,1,49,1,50,1,51,1,52,1,53,1,54,
				1,55,1,56,1,57,1,58,1,59,1,60,1,61,1,62,
				1,63,1,64,1,65,1,66,1,67,1,68,1,69,1,70,
				1,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,
				1,79,1,80,1,81,1,82,1,83,1,84,1,85,1,86,
				1,87,1,88,1,89,1,90,1,91,1,92,1,93,1,94,
				1,95,1,96,1,97,1,98,1,99,1,100,1,101,1,102,
				1,103,1,104,1,105,1,106,1,107,1,108,1,109,1,110,
				1,111,1,112,1,113,1,114,1,115,1,116,1,117,1,118,
				1,119,1,120,1,121,1,122,1,123,1,124,1,125,1,126,
				1,127,1,146,1,250,1,251,1,252,1,253,1,254,1,255,
				4,1,4,2,4,3,3(4),5,4,6,4,7,4,8,4,9,
				4,10,4,11,4,12,4,14,4,15,4,16,4,17,4,18,
				4,19,4,20,4,21,4,22,4,23,4,24,4,25,4,26,
				4,27,4,28,4,29,4,30,4,31,4,32,4,33,4,34,
				4,35,4,36,4,37,4,38,4,39,4,40,4,41,4,42,
				4,43,4,44,4,45,4,46,4,47,4,48,4,49,4,50,
				4,51,4,52,4,53,4,54,4,55,4,56,4,57,4,58,
				4,59,4,60,4,61,4,62,4,63,4,64,4,65,4,66,
				4,67,4,68,4,69,4,70,4,71,4,72,4,73,4,74,
				4,75,4,76,4,77,4,78,4,79,4,81,4,82,4,83,
				4,84,4,85,4,86,4,87,4,88,4,89,4,90,4,91,
				4,92,4,94,4,95,4,144,4,145,19(0),252,252,6(0),13,13,
				5(0),60,60,0,60,60,9(0),32,32,224,252,60,224,252,60,1,
				15,15,1,15,15,1,1,0,0,56,124,254,254,132,4,0,
				0,8,8,31,31,15,7,56,124,68,252,248,248,156,132,0,
				8,14,7,7,15,8,15,0,0,184,252,228,188,152,192,0,
				7,15,8,9,15,7,13,3(0),60,60,14(0),192,240,56,12,4,
				3(0),3,15,28,48,32,0,4,12,56,240,192,3(0),32,48,28,
				15,3,3(0),40,56,124,124,56,40,10(0),3(128),240,240,128,128,4(0),
				7,7,12(0),16,28,12,13(0),5(1),12(0),12,12,6(0),192,240,60,12,
				0,0,12,15,3,5(0),240,248,204,196,204,248,240,0,3,7,
				12,8,12,7,3,0,8,12,252,252,4(0),8,8,15,15,8,
				8,0,0,3(4),132,252,120,0,0,12,14,11,9,8,8,0,
				0,4,68,68,228,188,24,0,0,3(8),12,7,3,3(0),192,240,
				60,252,252,0,0,3,3,2,2,15,15,2,0,0,124,124,
				68,68,196,132,0,0,4(8),15,7,0,240,248,204,68,68,196,
				128,0,3,7,12,8,8,15,7,0,3(4),196,244,60,12,0,
				0,8,14,7,1,3(0),24,188,228,68,228,188,24,0,7,15,
				3(8),15,7,0,120,252,132,132,204,248,240,0,0,3(8),12,7,
				3,3(0),96,96,6(0),12,12,6(0),96,96,5(0),16,28,12,5(0),128,
				192,64,96,48,16,3(0),1,1,3,6,4,0,7(32),0,7(1),0,
				0,16,48,96,64,192,128,0,0,4,6,3,1,1,3(0),8,
				140,196,68,124,56,3(0),13,13,3(0),240,248,204,228,228,236,248,
				240,7,15,25,4(19),1,0,128,248,124,124,248,128,0,12,15,
				3,1,1,3,15,12,0,252,252,3(68),252,184,0,15,15,3(8),
				15,7,0,240,248,12,4,4,12,8,0,3,7,12,8,8,
				12,4,0,252,252,4,4,12,248,240,0,15,15,8,8,12,
				7,3,0,252,252,5(68),0,15,15,5(8),0,252,252,5(68),0,15,
				15,6(0),240,248,12,132,132,140,136,0,3,7,12,8,8,15,
				7,0,252,252,3(64),252,252,0,15,15,3(0),15,15,0,4,4,
				252,252,4,4,0,0,8,8,15,15,8,8,6(0),252,252,0,
				0,4(8),15,7,0,0,252,252,192,224,48,24,12,0,15,15,
				0,1,3,6,12,0,252,252,6(0),15,15,5(8),0,252,252,120,
				96,120,252,252,0,15,15,3(0),15,15,0,252,252,120,224,128,
				252,252,0,15,15,0,1,7,15,15,0,240,248,12,4,12,
				248,240,0,3,7,12,8,12,7,3,0,252,252,3(68),124,56,
				0,15,15,6(0),240,248,12,4,12,248,240,0,3,7,12,24,
				60,39,35,0,252,252,68,196,196,124,56,0,15,15,0,0,
				3,7,12,0,56,124,68,196,132,140,8,0,4,12,3(8),15,
				7,3(4),252,252,3(4),3(0),15,15,4(0),252,252,3(0),252,252,0,7,
				15,3(8),15,7,12,124,240,128,128,240,124,12,0,0,7,15,
				15,7,0,0,252,252,128,224,224,128,252,252,3,15,15,3,
				3,15,15,3,4,28,56,224,224,56,28,4,8,14,7,1,
				1,7,14,8,4,28,56,224,224,56,28,4,3(0),15,15,4(0),
				4,4,132,228,116,28,12,0,12,14,11,9,3(8),3(0),252,252,
				4,4,4(0),63,63,32,32,0,0,12,60,240,192,7(0),3,15,
				12,0,0,4,4,252,252,4(0),32,32,63,63,4(0),64,112,56,
				12,12,56,112,16(0),8(64),3(0),4,12,8,11(0),64,96,3(32),224,192,
				0,6,15,9,9,13,15,15,0,252,252,96,32,96,192,128,
				0,15,15,12,8,12,7,3,0,128,192,96,4(32),0,3,7,
				12,4(8),0,128,192,96,32,96,252,252,0,3,7,12,8,12,
				15,15,0,128,192,96,32,96,192,128,0,3,7,13,4(9),0,
				32,32,248,252,3(36),3(0),15,15,4(0),192,224,32,32,224,224,32,
				0,61,127,74,74,75,121,48,0,252,252,96,32,32,224,192,
				0,15,15,3(0),15,15,0,0,32,32,228,228,6(0),15,15,4(0),
				32,32,228,228,3(0),3(64),127,63,3(0),252,252,128,192,96,32,0,
				0,15,15,1,3,6,12,8,0,4,4,252,252,6(0),15,15,
				8,8,0,224,224,32,224,224,32,224,192,15,15,0,15,15,
				0,15,15,0,224,224,96,32,32,224,192,0,15,15,3(0),15,
				15,0,192,224,3(32),224,192,0,7,15,3(8),15,7,0,224,224,
				96,32,96,192,128,0,127,127,12,8,12,7,3,0,128,192,
				96,32,96,224,224,0,3,7,12,8,12,127,127,0,0,224,
				224,96,3(32),0,0,15,15,5(0),192,224,5(32),0,8,4(9),15,6,
				0,0,32,248,248,32,32,4(0),7,15,3(8),0,224,224,3(0),224,
				224,0,7,15,8,8,12,15,15,32,224,192,0,0,192,224,
				32,0,1,7,14,14,7,1,0,224,224,0,128,128,0,224,
				224,3,15,15,3,3,15,15,3,0,32,96,192,128,192,96,
				32,0,8,12,7,3,7,12,8,32,224,192,0,0,192,224,
				32,64,64,103,63,31,7,3(0),3(32),160,224,96,32,0,8,12,
				15,11,3(8),0,0,128,248,124,4,5(0),31,63,32,5(0),252,252,
				6(0),63,63,6(0),4,124,248,128,4(0),32,63,31,3(0),4(128),0,0,
				128,1,1,0,0,4(1),19(0),96,96,6(0),127,127,4(0),128,192,96,
				240,240,32,32,0,3,7,12,31,31,8,8,0,128,248,252,
				132,132,4,0,0,8,15,7,12,3(8),0,208,240,48,16,48,
				240,208,0,2,3,3,2,3,3,2,132,156,248,224,224,248,
				156,132,3(2),15,15,3(2),3(0),124,124,6(0),126,126,4(0),152,252,100,
				68,68,196,132,0,65,67,66,70,68,127,59,0,0,4(8),10(0),
				240,248,108,244,148,148,12,248,0,1,3,3(2),3,1,0,0,
				100,116,84,124,120,10(0),128,192,96,160,192,96,32,0,3,7,
				12,11,7,12,8,0,5(32),224,224,18(0),5(1),0,240,248,12,3(244),
				172,248,0,1,3,3(2),3,1,18(0),24,60,36,60,24,10(0),3(64),
				248,248,64,64,0,3(8),11,11,8,8,3(0),68,100,124,88,12(0),
				68,84,124,40,12(0),8,12,4,11(0),224,224,3(0),224,224,0,63,
				63,8,8,12,15,15,120,6(252),4,3(0),4(63),4(0),128,128,6(0),1,
				1,14(0),80,112,48,4(0),68,124,124,64,12(0),24,60,36,60,24,
				10(0),32,96,192,160,96,192,128,0,8,12,7,11,12,7,3,
				68,124,124,64,192,248,188,132,0,0,8,15,7,6,7,15,
				68,124,124,64,192,248,188,132,0,0,8,15,7,8,12,15,
				0,68,84,124,232,248,188,132,0,0,8,15,7,6,7,15,
				5(0),96,96,3(0),56,120,76,71,99,32,0,128,248,125,125,248,
				128,0,12,15,3,1,1,3,15,12,0,128,248,125,125,248,
				128,0,12,15,3,1,1,3,15,12,0,129,249,124,125,249,
				128,0,12,15,3,1,1,3,15,12,0,129,249,125,125,249,
				128,0,12,15,3,1,1,3,15,12,0,128,249,125,125,249,
				128,0,12,15,3,1,1,3,15,12,0,128,244,254,254,244,
				128,0,12,15,3,0,0,3,15,12,0,0,240,3(252),68,68,
				12,15,3,0,15,15,8,8,0,240,248,12,4,4,12,8,
				0,3,7,12,88,120,60,4,0,252,252,68,69,69,68,68,
				0,15,15,5(8),0,252,252,69,69,3(68),0,15,15,5(8),0,252,
				253,69,68,69,69,68,0,15,15,5(8),0,252,252,4(69),68,0,
				15,15,5(8),0,4,4,253,253,4,4,0,0,8,8,15,15,
				8,8,0,0,4,4,253,253,4,4,0,0,8,8,15,15,
				8,8,0,0,5,5,252,253,5,4,0,0,8,8,15,15,
				8,8,0,0,4,5,253,253,5,4,0,0,8,8,15,15,
				8,8,0,64,252,252,68,4,12,248,240,0,15,15,8,8,
				12,7,3,0,252,253,121,225,129,253,252,0,15,15,0,1,
				7,15,15,0,240,248,12,5,13,248,240,0,3,7,12,8,
				12,7,3,0,240,248,13,5,12,248,240,0,3,7,12,8,
				12,7,3,0,240,249,13,4,13,249,240,0,3,7,12,8,
				12,7,3,0,240,249,13,5,13,249,240,0,3,7,12,8,
				12,7,3,0,240,248,13,5,13,249,240,0,3,7,12,8,
				12,7,3,0,0,32,96,192,192,96,32,0,0,2,3,1,
				1,3,2,0,240,248,140,228,124,254,242,0,19,31,15,9,
				12,7,3,0,252,252,0,1,1,252,252,0,7,15,3(8),15,
				7,0,252,252,1,1,0,252,252,0,7,15,3(8),15,7,0,
				252,253,1,0,1,253,252,0,7,15,3(8),15,7,0,252,252,
				3(1),253,252,0,7,15,3(8),15,7,4,28,56,225,225,56,28,
				4,3(0),15,15,4(0),252,252,3(16),240,224,0,15,15,3(2),3,1,
				0,248,252,196,228,188,24,0,0,15,15,8,8,9,15,6,
				0,64,96,36,44,40,224,192,0,6,15,9,9,13,15,15,
				0,64,96,40,44,36,224,192,0,6,15,9,9,13,15,15,
				0,64,104,44,36,44,232,192,0,6,15,9,9,13,15,15,
				0,64,104,44,44,40,236,196,0,6,15,9,9,13,15,15,
				0,64,96,3(40),232,192,0,6,15,9,9,13,15,15,0,64,
				96,3(46),238,192,0,6,15,9,9,13,15,15,3(32),224,224,32,
				224,192,6,15,9,15,15,3(9),0,128,192,96,4(32),0,3,7,
				12,88,120,56,8,0,128,192,100,44,104,192,128,0,3,7,
				13,4(9),0,128,192,104,44,100,192,128,0,3,7,13,4(9),0,
				128,200,108,36,108,200,128,0,3,7,13,4(9),0,128,192,104,
				40,104,200,128,0,3,7,13,4(9),0,0,32,36,236,232,6(0),
				15,15,4(0),32,40,236,228,6(0),15,15,4(0),40,44,228,236,8,
				5(0),15,15,4(0),32,40,232,232,8,5(0),15,15,3(0),192,224,52,
				60,60,244,192,0,7,15,3(8),15,7,0,224,232,108,44,40,
				236,196,0,15,15,3(0),15,15,0,192,224,36,44,40,224,192,
				0,7,15,3(8),15,7,0,192,224,32,40,44,228,192,0,7,
				15,3(8),15,7,0,192,232,44,36,44,232,192,0,7,15,3(8),
				15,7,0,192,232,44,44,40,236,196,0,7,15,3(8),15,7,
				0,192,224,3(40),232,192,0,7,15,3(8),15,7,3(128),160,160,3(128),
				3(0),2,2,4(0),192,224,32,224,240,240,192,0,7,31,31,15,
				8,15,7,0,224,224,4,12,8,224,224,0,7,15,8,8,
				12,15,15,0,224,224,8,12,4,224,224,0,7,15,8,8,
				12,15,15,0,224,232,12,4,12,232,224,0,7,15,8,8,
				12,15,15,0,224,224,3(8),232,224,0,7,15,8,8,12,15,
				15,32,224,192,8,12,196,224,32,64,64,103,63,31,7,3(0),
				252,252,96,32,96,192,128,0,127,127,12,8,12,7,3,32,
				224,200,8,8,200,224,32,64,64,103,63,31,7,3(0),129,249,
				125,125,249,129,0,12,15,3,1,1,3,15,12,0,64,100,
				3(36),228,196,0,6,15,9,9,13,15,15,0,128,248,125,125,
				249,128,0,12,15,3,1,1,3,15,12,0,64,100,44,40,
				44,228,192,0,6,15,9,9,13,15,15,0,128,248,124,124,
				248,128,0,12,15,3,1,1,115,127,76,0,64,96,3(32),224,
				192,0,6,15,9,9,125,127,79,0,240,248,12,5,5,12,
				8,0,3,7,12,8,8,12,4,0,128,192,96,40,44,36,
				32,0,3,7,12,4(8),0,240,249,13,4,5,13,8,0,3,
				7,12,8,8,12,4,0,128,200,108,36,44,40,32,0,3,
				7,12,4(8),0,240,248,12,5,5,12,8,0,3,7,12,8,
				8,12,4,0,128,192,96,36,36,32,32,0,3,7,12,4(8),
				0,240,248,13,5,5,12,8,0,3,7,12,8,8,12,4,
				0,128,196,108,40,44,36,32,0,3,7,12,4(8),0,252,252,
				5,5,13,248,240,0,15,15,8,8,12,7,3,128,192,96,
				32,96,252,252,12,3,7,12,8,12,15,15,0,64,252,252,
				68,4,12,248,240,0,15,15,8,8,12,7,3,0,128,192,
				96,40,104,252,252,0,3,7,12,8,12,15,15,0,252,253,
				5(69),0,15,15,5(8),0,128,196,100,36,100,196,132,0,3,7,
				13,4(9),0,252,252,3(69),68,68,0,15,15,5(8),0,128,196,108,
				40,108,196,128,0,3,7,13,4(9),0,252,252,68,69,69,68,
				68,0,15,15,5(8),0,128,192,96,36,100,192,128,0,3,7,
				13,4(9),0,252,252,5(68),0,15,15,56,120,72,72,8,0,128,
				192,96,32,96,192,128,0,3,7,13,57,121,73,73,0,252,
				252,3(69),68,68,0,15,15,5(8),0,128,196,108,40,108,196,128,
				0,3,7,13,4(9),0,240,248,13,133,132,141,137,0,3,7,
				12,8,8,15,7,0,192,232,44,36,236,232,32,0,61,127,
				74,74,75,121,48,0,240,248,13,133,133,140,136,0,3,7,
				12,8,8,15,7,0,192,228,44,40,236,228,32,0,61,127,
				74,74,75,121,48,0,240,248,12,133,133,140,136,0,3,7,
				12,8,8,15,7,0,192,224,36,36,224,224,32,0,61,127,
				74,74,75,121,48,0,240,248,12,132,132,140,136,0,3,7,
				76,104,40,15,7,0,192,224,40,44,228,224,32,0,61,127,
				74,74,75,121,48,0,252,253,65,64,65,253,252,0,15,15,
				3(0),15,15,0,252,253,97,32,33,225,192,0,15,15,3(0),15,
				15,8,252,252,3(72),252,252,0,15,15,3(0),15,15,8,252,252,
				104,40,32,224,192,0,15,15,3(0),15,15,0,5,5,253,253,
				5,4,0,0,8,8,15,15,8,8,0,0,8,44,44,232,
				236,4,5(0),15,15,3(0),5,5,253,253,5,5,0,0,8,8,
				15,15,8,8,3(0),36,36,228,228,4,4,4(0),15,15,3(0),4,
				4,253,253,5,4,0,0,8,8,15,15,8,8,3(0),32,36,
				236,232,12,4,4(0),15,15,3(0),4,4,252,252,4,4,0,0,
				8,8,127,127,72,8,3(0),32,32,228,228,5(0),48,127,79,64,
				0,0,4,4,253,253,4,4,0,0,8,8,15,15,8,8,
				3(0),32,32,224,224,6(0),15,15,0,0,4,252,252,4,0,0,
				252,252,8,15,15,3(8),15,7,32,32,228,228,32,32,228,228,
				0,0,15,15,64,64,127,63,0,0,1,1,0,253,253,0,
				0,4(8),15,7,0,0,8,44,36,228,236,8,0,0,3(64),127,
				63,3(0),252,252,192,224,48,24,12,0,15,15,64,97,35,6,
				12,0,252,252,128,192,96,32,0,0,15,15,65,99,38,12,
				8,0,224,224,128,192,96,32,32,0,15,15,1,3,6,12,
				8,0,252,252,1,1,4(0),15,15,5(8),0,4,4,253,253,6(0),
				15,15,8,8,0,0,252,252,6(0),15,15,72,104,40,8,8,
				0,4,4,252,252,6(0),79,111,40,8,0,0,252,252,0,0,
				8,12,4,0,15,15,5(8),0,4,4,252,252,8,12,4,3(0),
				15,15,8,8,0,0,252,252,0,128,128,3(0),15,15,5(8),0,
				4,4,252,252,0,128,128,3(0),15,15,8,8,0,0,252,252,
				192,96,32,0,0,1,15,15,5(8),0,4,132,252,252,96,32,
				0,0,1,1,15,15,8,8,0,0,252,252,121,225,128,252,
				252,0,15,15,0,1,7,15,15,0,224,224,104,44,36,224,
				192,0,15,15,3(0),15,15,0,252,252,120,224,128,252,252,0,
				15,15,64,97,39,15,15,0,224,224,96,32,32,224,192,0,
				15,15,64,96,32,15,15,0,252,252,121,225,129,252,252,0,
				15,15,0,1,7,15,15,0,224,228,108,40,44,228,192,0,
				15,15,3(0),15,15,4,230,226,96,32,32,224,192,0,15,15,
				3(0),15,15,0,252,252,120,224,128,252,252,0,15,15,64,65,
				71,127,63,0,224,224,96,32,32,224,192,0,15,15,3(64),127,
				63,0,240,249,13,5,13,249,241,0,3,7,12,8,12,7,
				3,0,192,228,3(36),228,196,0,7,15,3(8),15,7,0,240,248,
				13,5,13,248,240,0,3,7,12,8,12,7,3,0,192,228,
				44,40,44,228,192,0,7,15,3(8),15,7,0,240,248,13,5,
				13,249,240,0,3,7,12,8,12,7,3,0,192,224,40,44,
				44,236,196,0,7,15,3(8),15,7,0,240,248,12,252,252,68,
				68,0,3,7,12,15,15,8,8,192,224,32,160,224,96,32,
				224,7,15,8,11,15,13,9,9,0,252,252,69,197,196,124,
				56,0,15,15,0,0,3,7,12,0,0,224,232,108,36,32,
				32,0,0,15,15,5(0),252,252,68,196,196,124,56,0,15,15,
				64,96,35,7,12,0,0,224,224,96,3(32),0,0,15,79,96,
				32,3(0),252,252,69,197,197,124,56,0,15,15,0,0,3,7,
				12,0,0,228,236,104,44,36,32,0,0,15,15,5(0),56,124,
				69,197,132,140,8,0,4,12,3(8),15,7,0,192,224,40,44,
				36,32,32,0,8,4(9),15,6,0,56,125,69,196,133,141,8,
				0,4,12,3(8),15,7,0,192,232,44,36,44,40,32,0,8,
				4(9),15,6,0,56,124,68,196,132,140,8,0,4,12,72,104,
				40,15,7,0,192,224,5(32),0,8,9,73,105,41,15,6,0,
				56,124,69,197,133,140,8,0,4,12,3(8),15,7,0,192,228,
				44,40,44,36,32,0,8,4(9),15,6,3(4),252,252,3(4),0,0,
				64,111,47,5(0),32,248,248,32,32,4(0),71,111,40,8,8,4,
				4,5,253,253,3(4),3(0),15,15,4(0),32,248,248,32,32,8,12,
				0,0,7,15,3(8),0,4,68,68,252,252,68,68,4,3(0),15,
				15,5(0),160,248,248,160,160,4(0),7,15,3(8),0,252,253,3(1),253,
				252,0,7,15,3(8),15,7,0,224,232,12,12,8,236,228,0,
				7,15,8,8,12,15,15,0,252,253,3(1),253,253,0,7,15,
				3(8),15,7,0,224,228,3(4),228,228,0,7,15,8,8,12,15,
				15,0,252,252,3(1),252,252,0,7,15,3(8),15,7,0,224,228,
				12,8,12,228,224,0,7,15,8,8,12,15,15,0,252,252,
				3(1),253,252,0,7,15,3(8),15,7,0,224,224,3(14),238,224,0,
				7,15,8,8,12,15,15,0,252,252,3(1),253,252,0,7,15,
				3(8),15,7,0,224,224,8,12,12,236,228,0,7,15,8,8,
				12,15,15,0,252,252,3(0),252,252,0,7,15,120,120,72,15,
				7,0,224,224,3(0),224,224,0,7,15,8,8,60,127,79,252,
				252,129,225,224,129,253,252,3,15,15,3,3,15,15,3,224,
				232,12,132,140,8,224,224,3,15,15,3,3,15,15,3,4,
				29,57,224,225,57,28,4,3(0),15,15,3(0),32,224,200,12,4,
				204,232,32,64,64,103,63,31,7,0,0,4,28,57,225,225,
				57,28,4,3(0),15,15,4(0),4,4,133,229,116,28,12,0,12,
				14,11,9,3(8),0,32,32,40,172,228,96,32,0,8,12,15,
				11,3(8),0,4,4,132,229,117,28,12,0,12,14,11,9,3(8),
				0,3(32),164,228,96,32,0,8,12,15,11,3(8),0,4,4,133,
				229,117,28,12,0,12,14,11,9,3(8),0,32,36,44,168,236,
				100,32,0,8,12,15,11,3(8),0,0,32,248,252,3(4),3(0),15,
				15,6(0),32,240,248,44,36,0,32,32,62,31,1,3(0),128,244,
				254,254,244,128,0,12,15,3,0,0,3,15,12,0,64,96,
				47,47,46,238,192,0,6,15,9,9,13,15,15,0,0,240,
				252,253,253,68,68,12,15,3,0,15,15,8,8,3(32),232,236,
				36,224,192,6,15,9,15,15,3(9),0,240,248,141,229,124,254,
				242,0,19,31,15,9,12,7,3,0,192,224,40,236,244,240,
				192,0,7,31,31,15,8,15,7,0,252,252,4(69),68,0,15,
				15,5(8),4,4,252,252,100,36,224,192,0,0,15,15,8,8,
				15,7,0,0,252,253,5,3(4),0,0,15,15,5(0),240,248,76,
				68,68,76,8,0,3,7,12,8,8,12,4,0,56,124,68,
				196,132,140,8,0,4,12,3(8),15,7,0,4,4,252,252,4,
				4,0,0,8,8,15,15,8,8,0,0,4,5,253,253,5,
				4,0,0,8,8,15,15,8,8,6(0),252,252,0,0,4(8),15,
				7,0,0,4(252),64,192,128,8,4(15),8,15,7,0,4(252),64,192,
				128,0,4(15),8,15,7,4,4,252,252,100,36,224,192,0,0,
				15,15,0,0,15,15,0,252,252,193,225,48,24,12,0,15,
				15,0,1,3,6,12,12,60,241,193,193,240,60,12,0,8,
				8,15,7,1,3(0),252,252,3(0),252,252,0,15,15,56,56,8,
				15,15,0,128,248,124,124,248,128,0,12,15,3,1,1,3,
				15,12,0,252,252,68,68,196,132,0,0,15,15,8,8,12,
				7,3,0,252,252,3(68),252,184,0,15,15,3(8),15,7,0,0,
				252,252,4(4),0,0,15,15,7(0),252,252,4,252,252,56,60,15,
				11,8,8,15,63,0,252,252,5(68),0,15,15,5(8),28,112,224,
				252,252,224,112,28,14,7,1,15,15,1,7,14,0,8,12,
				68,68,228,188,24,0,4,12,8,8,12,7,3,0,252,252,
				128,224,120,252,252,0,15,15,7,1,0,15,15,0,252,252,
				129,225,121,253,252,0,15,15,7,1,0,15,15,0,252,252,
				192,224,48,24,12,0,15,15,0,1,3,6,12,0,252,252,
				3(4),252,252,8,15,15,3(0),15,15,0,252,252,120,96,120,252,
				252,0,15,15,3(0),15,15,0,252,252,3(64),252,252,0,15,15,
				3(0),15,15,0,240,248,12,4,12,248,240,0,3,7,12,8,
				12,7,3,0,252,252,3(4),252,252,0,15,15,3(0),15,15,0,
				252,252,3(68),124,56,0,15,15,6(0),240,248,12,4,4,12,8,
				0,3,7,12,8,8,12,4(4),252,252,3(4),3(0),15,15,3(0),12,
				60,240,192,192,240,60,12,0,8,8,15,7,1,0,0,224,
				248,24,252,252,24,248,224,1,7,6,15,15,6,7,1,4,
				28,56,224,224,56,28,4,8,14,7,1,1,7,14,8,0,
				252,252,3(0),252,252,0,15,15,3(8),15,63,0,124,252,128,128,
				192,252,252,6(0),15,15,0,4(252),0,252,252,0,4(15),8,15,15,
				0,4(252),0,252,252,0,4(15),8,15,63,4,4,252,252,64,64,
				192,128,0,0,15,15,8,8,15,7,0,252,252,64,192,128,
				252,252,0,15,15,8,15,7,15,15,0,252,252,64,64,192,
				128,0,0,15,15,8,8,12,7,3,0,8,76,68,68,76,
				248,240,0,4,12,8,8,12,7,3,0,252,252,248,252,4,
				252,248,0,15,15,7,15,8,15,7,0,56,124,196,196,68,
				252,252,8,14,7,1,0,0,15,15,0,64,96,3(32),224,192,
				0,6,15,9,9,13,15,15,0,240,248,108,36,36,228,196,
				0,7,15,3(8),15,7,0,224,224,3(32),224,192,0,15,15,3(9),
				15,6,0,0,224,224,3(32),3(0),15,15,7(0),4(224),0,0,24,30,
				15,9,15,31,24,0,128,192,96,32,96,192,128,0,3,7,
				13,4(9),96,192,128,224,224,128,192,96,14,7,1,15,15,1,
				7,14,0,64,96,3(32),224,192,0,4,12,3(9),15,6,0,224,
				224,0,128,192,224,224,0,15,15,7,3,0,15,15,0,224,
				228,12,136,204,228,224,0,15,15,7,3,0,15,15,0,224,
				224,128,192,96,32,32,0,15,15,1,3,6,12,8,0,0,
				224,224,32,32,224,224,0,8,15,15,0,0,15,15,0,3(224),
				0,3(224),0,7(15),0,224,224,3(0),224,224,0,15,15,3(1),15,15,
				0,192,224,3(32),224,192,0,7,15,3(8),15,7,0,224,224,3(32),
				224,224,0,15,15,3(0),15,15,0,224,224,96,32,96,192,128,
				0,127,127,12,8,12,7,3,0,128,192,96,4(32),0,3,7,
				12,4(8),0,32,32,224,224,32,32,4(0),15,15,3(0),32,224,192,
				0,0,192,224,32,64,64,103,63,31,7,0,0,192,224,32,
				252,252,32,224,192,7,15,8,127,127,8,15,7,0,32,96,
				192,128,192,96,32,0,8,12,7,3,7,12,8,0,224,224,
				0,0,224,224,0,0,15,15,8,8,15,63,56,0,224,224,
				3(0),224,224,0,1,3,2,2,3,15,15,0,4(224),0,224,224,
				0,4(15),8,15,15,0,4(224),0,224,224,0,4(15),8,15,63,32,
				32,224,224,6(0),15,15,9,9,15,6,0,224,224,3(0),224,224,
				0,15,15,9,15,6,15,15,0,0,224,224,6(0),15,15,9,
				9,15,6,0,64,96,32,32,96,192,128,0,4,12,9,9,
				13,7,3,0,224,224,192,224,32,224,192,0,15,15,7,15,
				8,15,7,0,0,192,224,32,32,224,224,0,8,12,7,3,
				1,15,15,0,128,192,104,40,104,200,128,0,3,7,13,4(9),
				8,252,252,104,32,32,224,192,0,15,15,32,96,64,127,63,
				0,0,224,232,44,36,32,3(0),15,15,5(0),128,192,96,32,32,
				96,64,0,3,7,13,9,9,12,4,0,192,224,5(32),0,8,
				4(9),15,6,0,0,32,32,228,228,6(0),15,15,4(0),32,40,232,
				232,8,5(0),15,15,4(0),32,32,228,228,3(0),3(64),127,63,3(0),224,
				224,32,224,224,0,0,8,15,7,0,3(15),6,0,224,224,0,
				224,224,3(0),15,15,1,3(15),6,8,252,252,104,32,32,224,192,
				0,15,15,3(0),15,15,0,224,224,136,204,100,32,32,0,15,
				15,1,3,6,12,8,32,228,204,8,8,204,228,32,64,64,
				103,63,31,7,3(0),224,224,3(0),224,224,0,15,15,56,56,8,
				15,15,0,252,252,3(4),7,7,0,15,15,7(0),224,224,32,32,
				56,56,0,0,15,15,4(0);

	{G:"Keys"}
	kKEY_Enter : USINT := 13;
	kKEY_LongLeft : USINT := 15;
	kKEY_Left : USINT := 8;
	kKEY_Right : USINT := 12;
	kKEY_Up : USINT := 11;
	kKEY_Down : USINT := 10;
	kKEY_LongUp : USINT := 17;
	kKEY_LongDown : USINT := 18;
	kKEY_LongEnter : USINT := 19;
	kKEY_LongRight : USINT := 16;
	kKEY_VK_F1 : USINT := 30;
	kKEY_VK_F2 : USINT := 31;
	kKEY_VK_F3 : USINT := 32;
	kKEY_VK_F4 : USINT := 33;
	kKEY_VK_F5 : USINT := 34;
	kKEY_VK_F6 : USINT := 35;
	kKEY_VK_F7 : USINT := 36;
	kKEY_VK_F8 : USINT := 37;
	kKEY_VK_F9 : USINT := 38;
	kKEY_VK_F10 : USINT := 39;

	{G:"Data types"}
	tyUndefined : USINT := 19;
	tyBool : USINT := 1;
	tySInt : USINT := 2;
	tyInt : USINT := 5;
	tyDInt : USINT := 9;
	tyLInt : USINT := 12;
	tyUSInt : USINT := 3;
	tyUInt : USINT := 6;
	tyUDInt : USINT := 10;
	tyULInt : USINT := 13;
	tyReal : USINT := 15;
	tyLReal : USINT := 16;
	tyByte : USINT := 4;
	tyWord : USINT := 7;
	tyDWord : USINT := 11;
	tyLWord : USINT := 14;
	tyString : USINT := 17;

	{G:"Messages"}
	kWM_NULL : UINT := 0;
	kWM_KEY : UINT := 1;
	kWM_MSG : UINT := 2;
	kWM_SELECT : UINT := 3;
	kWM_PUSH : UINT := 4;
	kEV_WM_TEXTSELECT : UINT := 5;
	kEV_WM_OPENPAGE : UINT := 6;
	kEV_WM_CLOSEPAGE : UINT := 7;
	kEV_WM_CHANGESETPAGE : UINT := 8;

	{G:"Access modes"}
	kACS_IDLE : USINT := 0;
	kACS_INIT : USINT := 1;
	kACS_PRINT : USINT := 2;
	kACS_SELECT : USINT := 3;
	kACS_MODIFY : USINT := 4;
	kACS_DELETE : USINT := 5;
	kACS_QUERY : USINT := 6;
	kACS_BCKQUERY : USINT := 7;
	kACS_CLOSE : USINT := 8;
	kACS_OPEN : USINT := 9;

	{G:"Parameters and device"}
	kCOMM_PROTO_ID_LOCAL : USINT := 1;
	kCOMM_PROTO_ID_MODBUS_RTU : USINT := 2;
	kCOMM_PROTO_ID_MODBUS_TCP : USINT := 3;
	kCOMM_PROTO_ID_CANOPEN : USINT := 4;

	{G:"Project"}
	IsRealMode_MB_ADDR : UINT := 13959;

	{G:"Resources"}
	kLangBaseLanguage : UDINT := 0;


	(*** Enumeratives: ***)
	kbEnumIdxBaseLanguage : UDINT := 0;
	kbResEnums : ARRAY[ 0..39 ] OF BYTE :=
	(*** Language: BaseLanguage ***)
	(*** Enum ID ***) 16#01,
	(* 0 *) 16#00, 16#00, 16#00, 16#00, 
	(* SIMULATION *) 16#53, 16#49, 16#4D, 16#55, 16#4C, 16#41, 16#54, 16#49, 16#4F, 16#4E, 16#00, 
	(* 1 *) 16#01, 16#00, 16#00, 16#00, 
	(* R E A L *) 16#52, 16#20, 16#45, 16#20, 16#41, 16#20, 16#4C, 16#00, 
	(* End of enum *) 16#CD, 16#CD, 16#CD, 16#CD, 16#CD, 16#CD, 16#CD, 16#CD, 
	(* End of language *) 16#CD, 16#CD, 16#CD, 16#CD ;
	{G:"Parameters"}
	kPAR_MSG_NOTFOUND : UINT := 103;
	kPAR_MSG_SYSERR : UINT := 106;
	kPAR_ERR_OK : UINT := 0;
	kPAR_ERR_NOTFOUND : UINT := 1;
	kPAR_ERR_INVTYPE : UINT := 3;

END_VAR

	(***************************)
	(*                         *)
	(*        PROGRAMS         *)
	(*                         *)
	(***************************)

PROGRAM PageDraw

	VAR
	res : USINT;
	END_VAR

	{CODE:ST}
	(* Locking the video *)
	res := Video_Lock( res );

	(* INIT HMI ENVIRONMENT *)
	res := Video_InitHMI( TRUE );

	(* Network devices configuration *)

	(* LocalParameters configuration (id: 0)*)
	res := Video_SetDeviceCfg( 0, kCOMM_PROTO_ID_LOCAL, 16#00000000 );

	(* Switching on the LCD *)
	res := Video_Switch( TRUE );

	(* Initializing the length of the call stack *)
	giStackPtr := 0;

	(* Declaring the code of the keys for driving the editing mode *)
	res := Video_SetEditKey( 0, kKEY_Enter );
	res := Video_SetEditKey( 1, kKEY_LongLeft );
	res := Video_SetEditKey( 3, kKEY_Left );
	res := Video_SetEditKey( 4, kKEY_Right );
	res := Video_SetEditKey( 5, kKEY_Up );
	res := Video_SetEditKey( 6, kKEY_Down );
	res := Video_SetEditKey( 12, kKEY_LongUp );
	res := Video_SetEditKey( 13, kKEY_LongDown );

	(* *** DECLARING THE RESOURCES *** *)
	res := Video_LoadLanguage( 0, ?kbResEnums[0] );

	(* Declaring the imported fonts *)
	res := Video_AddFontUnicode( ?EWP2_6x8, EWP2_6x8_len, EWP2_6x8_hei );
	res := Video_AddFontUnicode( ?EWP2_8x16, EWP2_8x16_len, EWP2_8x16_hei );

	(* Declaring the system attributes of windows *)
	res := Video_SetWndSysProps( ?EWP2_6x8, 16777215, 0 );

	(* *** INITIALIZING THE OBJECTS OF PAGE 'TempSyncByCAN' *** *)

	(* *** INITIALIZING THE OBJECTS OF PAGE 'ModeSelection' *** *)

	(* Init the set elements *)
	guiCallStack[ giStackPtr ] := 0;
	WHILE TRUE DO
		CASE guiCallStack[ giStackPtr ] OF

			0:
				fbModeSelection();


		END_CASE;


	END_WHILE;


END_PROGRAM

PROGRAM PageRefresh

VAR
res : USINT;
END_VAR

	{CODE:ST}
	(* Wait for the PageDraw to start *)
	WHILE giStackPtr < 0 DO
		res := Video_Sleep(50);
	END_WHILE;

	WHILE TRUE DO
		CASE guiCallStack[ giStackPtr ] OF

			0:
				fbRefrModeSelection();


		END_CASE;

		res := Video_Sleep( 50 );

	END_WHILE;


END_PROGRAM

	(***************************)
	(*                         *)
	(*  ALARM PAGE F. BLOCKS   *)
	(*                         *)
	(***************************)

	(***********************************)
	(*                                 *)
	(* EXPRESSIONS RESOLVER F. BLOCKS  *)
	(*                                 *)
	(***********************************)

	(***************************)
	(*                         *)
	(* PAGE-DRAWING F. BLOCKS  *)
	(*                         *)
	(***************************)

FUNCTION_BLOCK DrawModeSelection

	VAR_OUTPUT
	uiOutVar : UINT;
	END_VAR

	VAR_EXTERNAL
	guiCallStack : ARRAY[ 0..9 ] OF UINT;
	giStackPtr : INT;
	ModeSelection_tmpBOOL : BOOL;
	IsRealMode_MB_ADDR : UINT;
	fbModeSelectionEdit_1 : EditBox01;
	fbTempSyncByCAN : DrawTempSyncByCAN;
	$waitRefresh : BOOL;
	END_VAR

	VAR
	res : USINT;
	bStatRedrw : BOOL;
	bMapsReset : BOOL;
	iNextSel : INT;
	$Set_IndexVisEl : UINT;
	$Set_CycleRefresh : UINT;
	$Set_PtrBoolVis : @BOOL;
	$Set_VisEl : BOOL;
	$Set_IndexPageInSet : UINT;
	$Set_ForcePageReload : BOOL;
	$Set_NextPage : BOOL;
	$Set_PrevPage : BOOL;
	$Set_LocalSetPagNumber: UINT;
	$Set_NumVisEl: UINT;
	$Set_LastFirstEl: INT;
	udiev : UDINT;
	ev : UINT;
	key : USINT;
	x1 : UINT;
	y1 : UINT;
	x2 : UINT;
	y2 : UINT;
	wParam : UINT;
	END_VAR

	{CODE:ST}

	(* Writing this page's ID to the top of the callstack *)
	guiCallStack[ giStackPtr ] := 16#00;

	(* Flag of waiting for refresh task *)
	$waitRefresh := TRUE;

	(* Resetting the object map *)
	res := Video_ResetMaps( 16#00 );

	(* Setting flags: this page is to be drawn *)
	bStatRedrw := TRUE;
	bMapsReset := TRUE;

	(* The area to be cleared is the area of the entire page *)
	x1:= 0;
	y1:= 0;
	x2:= 127;
	y2:= 63;

	(* Unlocking the video *)
	res := Video_Unlock( res );

	WHILE TRUE DO

		(* Locking the video *)
		res := Video_Lock( res );

		(* Initializing the page *)
		res := Video_InitPage( 0, 0, 127, 63, ?' ', 16#0003 );

		(* Setting the page colors *)
		res := Video_SetPageColors( 0, 16777215 );

		IF bStatRedrw THEN

			(* *** CLEARING PAGE AREA *** *)
			res := Video_ClrRect( x1, y1, x2, y2 );

		END_IF;

		IF bMapsReset THEN

			(* Resetting all maps *)
			res := Video_ResetMaps( 16#01 );

			(* *** DRAW PAGE CONTROLS *** *)

			(* *** PAGE SECTION *** *)

			(* *** DRAW CONTROLS *** *)
			fbModeSelectionEdit_1.accMode := kACS_INIT;
			fbModeSelectionEdit_1();
			fbModeSelectionEdit_1.accMode := kACS_PRINT;

			(* Select the first selectable control *)
			iNextSel := Video_FirstLastEdit( TRUE, FALSE );
			IF iNextSel > -1 THEN
				res := Video_SendEvent( kWM_SELECT, TO_UINT(iNextSel) );
			END_IF;


		END_IF;

		(* Unlocking the video *)
		res := Video_Unlock( res );

		(* Reset the flags for page redraw request *)
		bStatRedrw := FALSE;
		bMapsReset := FALSE;

		(* *** EVENTS HANDLING *** *)
		WHILE TRUE DO

			(* the drawing task wait the refreshing task *)
			IF $waitRefresh THEN
				res := Video_Sleep( 50 );
			ELSE

				(* Retrieving events *)
				udiev := Video_GetEvent( res );
				(* Extracting the event code *)
				ev := TO_UINT(udiev);

				CASE ev OF

				(* Key-related events handling: *)
				kWM_KEY:

					key := TO_USINT(SHR(udiev, 16));

					CASE key OF

					19:	(* Key: LongEnter - Action: Call *)
						Video_GetParam ( 0 , IsRealMode_MB_ADDR , 0 , ? ModeSelection_tmpBOOL , tyUInt ) ;
						ModeSelection_tmpBOOL := not ModeSelection_tmpBOOL ;
						Video_SetParam ( 0 , IsRealMode_MB_ADDR , 0 , ? ModeSelection_tmpBOOL , tyBool ) ;
						

					12:	(* Key: Right - Action: OpenPage *)
						res := Video_Lock( res );
						giStackPtr := giStackPtr + 1;
						fbTempSyncByCAN();


						(* Locking the video and decrementing stack page *)
						res := Video_Lock( res );
						giStackPtr := giStackPtr - 1;
						$waitRefresh := TRUE;
						res := Video_Unlock( res );

						(* Area to be erased = area of the child window just closed *)
						x1 := 0;
						y1 := 0;
						x2 := 127;
						y2 := 63;
						bStatRedrw := TRUE;
						bMapsReset := TRUE;
						EXIT;

					END_CASE;

				END_CASE;
			END_IF;

		END_WHILE;

	END_WHILE;

END_FUNCTION_BLOCK

FUNCTION_BLOCK DrawTempSyncByCAN

	VAR_OUTPUT
	uiOutVar : UINT;
	END_VAR

	VAR_EXTERNAL
	guiCallStack : ARRAY[ 0..9 ] OF UINT;
	giStackPtr : INT;
	fbTempSyncByCANEdit_7 : EditBox01;
	fbTempSyncByCANEdit_8 : EditBox01;
	fbTempSyncByCANEdit_9 : EditBox01;
	fbTempSyncByCANEdit_10 : EditBox01;
	fbTempSyncByCANEdit_11 : EditBox01;
	fbTempSyncByCANEdit_12 : EditBox01;
	$waitRefresh : BOOL;
	END_VAR

	VAR
	res : USINT;
	bStatRedrw : BOOL;
	bMapsReset : BOOL;
	iNextSel : INT;
	$Set_IndexVisEl : UINT;
	$Set_CycleRefresh : UINT;
	$Set_PtrBoolVis : @BOOL;
	$Set_VisEl : BOOL;
	$Set_IndexPageInSet : UINT;
	$Set_ForcePageReload : BOOL;
	$Set_NextPage : BOOL;
	$Set_PrevPage : BOOL;
	$Set_LocalSetPagNumber: UINT;
	$Set_NumVisEl: UINT;
	$Set_LastFirstEl: INT;
	udiev : UDINT;
	ev : UINT;
	key : USINT;
	x1 : UINT;
	y1 : UINT;
	x2 : UINT;
	y2 : UINT;
	wParam : UINT;
	END_VAR

	{CODE:ST}

	(* Writing this page's ID to the top of the callstack *)
	guiCallStack[ giStackPtr ] := 16#01;

	(* Flag of waiting for refresh task *)
	$waitRefresh := TRUE;

	(* Resetting the object map *)
	res := Video_ResetMaps( 16#00 );

	(* Setting flags: this page is to be drawn *)
	bStatRedrw := TRUE;
	bMapsReset := TRUE;

	(* The area to be cleared is the area of the entire page *)
	x1:= 0;
	y1:= 0;
	x2:= 127;
	y2:= 63;

	(* Unlocking the video *)
	res := Video_Unlock( res );

	WHILE TRUE DO

		(* Locking the video *)
		res := Video_Lock( res );

		(* Initializing the page *)
		res := Video_InitPage( 0, 0, 127, 63, ?' ', 16#0003 );

		(* Setting the page colors *)
		res := Video_SetPageColors( 0, 16777215 );

		IF bStatRedrw THEN

			(* *** CLEARING PAGE AREA *** *)
			res := Video_ClrRect( x1, y1, x2, y2 );

		END_IF;

		IF bMapsReset THEN

			(* Resetting all maps *)
			res := Video_ResetMaps( 16#02 );

			(* *** DRAW PAGE CONTROLS *** *)

			(* *** PAGE SECTION *** *)

			(* *** DRAW CONTROLS *** *)
			fbTempSyncByCANEdit_7.accMode := kACS_INIT;
			fbTempSyncByCANEdit_7();
			fbTempSyncByCANEdit_7.accMode := kACS_PRINT;
			fbTempSyncByCANEdit_8.accMode := kACS_INIT;
			fbTempSyncByCANEdit_8();
			fbTempSyncByCANEdit_8.accMode := kACS_PRINT;
			fbTempSyncByCANEdit_9.accMode := kACS_INIT;
			fbTempSyncByCANEdit_9();
			fbTempSyncByCANEdit_9.accMode := kACS_PRINT;
			fbTempSyncByCANEdit_10.accMode := kACS_INIT;
			fbTempSyncByCANEdit_10();
			fbTempSyncByCANEdit_10.accMode := kACS_PRINT;
			fbTempSyncByCANEdit_11.accMode := kACS_INIT;
			fbTempSyncByCANEdit_11();
			fbTempSyncByCANEdit_11.accMode := kACS_PRINT;
			fbTempSyncByCANEdit_12.accMode := kACS_INIT;
			fbTempSyncByCANEdit_12();
			fbTempSyncByCANEdit_12.accMode := kACS_PRINT;

			(* Select the first selectable control *)
			iNextSel := Video_FirstLastEdit( TRUE, FALSE );
			IF iNextSel > -1 THEN
				res := Video_SendEvent( kWM_SELECT, TO_UINT(iNextSel) );
			END_IF;


		END_IF;

		(* Unlocking the video *)
		res := Video_Unlock( res );

		(* Reset the flags for page redraw request *)
		bStatRedrw := FALSE;
		bMapsReset := FALSE;

		(* *** EVENTS HANDLING *** *)
		WHILE TRUE DO

			(* the drawing task wait the refreshing task *)
			IF $waitRefresh THEN
				res := Video_Sleep( 50 );
			ELSE

				(* Retrieving events *)
				udiev := Video_GetEvent( res );
				(* Extracting the event code *)
				ev := TO_UINT(udiev);

				CASE ev OF

				(* Key-related events handling: *)
				kWM_KEY:

					key := TO_USINT(SHR(udiev, 16));

					CASE key OF

					8:	(* Key: Left - Action: Close *)
						RETURN;

					13:	(* Key: Enter - Action: Edit *)

						CASE iNextSel OF

							0,1,2,3,4,5:
								(* Entering the edit mode *)
								res := Video_EnterEdit( TO_UINT( iNextSel ) );

								IF res = kKEY_Up THEN

									iNextSel := TO_INT( Video_NextEdit( TRUE ) );
									IF iNextSel > -1 THEN
										res := Video_SendEvent( kWM_SELECT, TO_UINT(iNextSel) );
									END_IF;

								ELSIF res = kKEY_Down THEN

									iNextSel := TO_INT( Video_PrevEdit( TRUE ) );
									IF iNextSel > -1 THEN
										res := Video_SendEvent( kWM_SELECT, TO_UINT(iNextSel) );
									END_IF;

								END_IF;

						END_CASE;

					11:	(* Key: Up - Action: PrevField *)
						iNextSel := TO_INT( Video_PrevEdit( TRUE ) );
						IF iNextSel > -1 THEN
							res := Video_SendEvent( kWM_SELECT, TO_UINT(iNextSel) );
						END_IF;

					10:	(* Key: Down - Action: NextField *)
						iNextSel := TO_INT( Video_NextEdit( TRUE ) );
						IF iNextSel > -1 THEN
							res := Video_SendEvent( kWM_SELECT, TO_UINT(iNextSel) );
						END_IF;

					END_CASE;

				(* Selecting a control: *)
				kWM_SELECT:

					(* Extracting the index of the edit box clicked *)
					iNextSel := TO_INT(SHR(udiev, 16));

					(* Only select the object *)
					res := Video_EnterEditSel( TO_UINT( iNextSel ), TRUE );

					END_CASE;
				END_IF;

			END_WHILE;

		END_WHILE;

	END_FUNCTION_BLOCK

	(***************************)
	(*                         *)
	(* REFRESHING FUN. BLOCKS  *)
	(*                         *)
	(***************************)

FUNCTION_BLOCK RefrModeSelection

	VAR_EXTERNAL
	guiCallStack : ARRAY[ 0..9 ] OF UINT;
	giStackPtr : INT;
	IsRealMode_MB_ADDR : UINT;
	ModeSelection_tmpBOOL : BOOL;
	fbModeSelectionEdit_1 : EditBox01;
	fbRefrTempSyncByCAN : RefrTempSyncByCAN;
	$waitRefresh : BOOL;
	END_VAR

	VAR
	res : USINT;
	pagID : UINT;
	n : USINT;
	iSP : INT;
	pDC : UDINT;
	rx1 : UINT;
	ry1 : UINT;
	rx2 : UINT;
	ry2 : UINT;
	END_VAR

	{CODE:ST}

	REPEAT

		(* Locking the video *)
		res := Video_Lock( res );

		(* Testing if page has changed *)
		pagID := guiCallStack[ giStackPtr ];

		IF pagID = 16#00 THEN

			(* the refresh task is arrived *)
			$waitRefresh := FALSE;

			(* *** REFRESH PAGE CONTROLS *** *)
			IF fbModeSelectionEdit_1.accMode <> kACS_MODIFY THEN
				fbModeSelectionEdit_1();
			END_IF;

			(* *** REFRESHING BACKGROUND ITEMS *** *)
			(* Cursor across the call stack *)
			iSP := giStackPtr;

			(* *** REFRESHING PARENT BACKGROUND ITEMS *** *)

			
		END_IF;

		(* Unlocking the video *)
		res := Video_Unlock( res );

		(* Suspending the task *)
		res := Video_Sleep( 50 );

		(* *** MANAGING CHILD WINDOWS AND ALARM MESSAGES *** *)
		IF pagID <> 16#00 THEN
			CASE pagID OF
				16#01:
					fbRefrTempSyncByCAN();

			END_CASE;

			(* Re-testing if this page is active *)
			res := Video_Lock( res );
			pagID := guiCallStack[ giStackPtr ];
			res := Video_Unlock( res );
		END_IF;

	UNTIL pagID <> 16#00
	END_REPEAT;

END_FUNCTION_BLOCK

FUNCTION_BLOCK RefrTempSyncByCAN

	VAR_EXTERNAL
	guiCallStack : ARRAY[ 0..9 ] OF UINT;
	giStackPtr : INT;
	fbTempSyncByCANEdit_7 : EditBox01;
	fbTempSyncByCANEdit_8 : EditBox01;
	fbTempSyncByCANEdit_9 : EditBox01;
	fbTempSyncByCANEdit_10 : EditBox01;
	fbTempSyncByCANEdit_11 : EditBox01;
	fbTempSyncByCANEdit_12 : EditBox01;
	$waitRefresh : BOOL;
	END_VAR

	VAR
	res : USINT;
	pagID : UINT;
	n : USINT;
	iSP : INT;
	pDC : UDINT;
	rx1 : UINT;
	ry1 : UINT;
	rx2 : UINT;
	ry2 : UINT;
	END_VAR

	{CODE:ST}

	REPEAT

		(* Locking the video *)
		res := Video_Lock( res );

		(* Testing if page has changed *)
		pagID := guiCallStack[ giStackPtr ];

		IF pagID = 16#01 THEN

			(* the refresh task is arrived *)
			$waitRefresh := FALSE;

			(* *** REFRESH PAGE CONTROLS *** *)
			fbTempSyncByCANEdit_7();
			fbTempSyncByCANEdit_8();
			fbTempSyncByCANEdit_9();
			fbTempSyncByCANEdit_10();
			fbTempSyncByCANEdit_11();
			fbTempSyncByCANEdit_12();

			(* *** REFRESHING BACKGROUND ITEMS *** *)
			(* Cursor across the call stack *)
			iSP := giStackPtr;

			(* *** REFRESHING PARENT BACKGROUND ITEMS *** *)

			
		END_IF;

		(* Unlocking the video *)
		res := Video_Unlock( res );

		(* Suspending the task *)
		res := Video_Sleep( 50 );

	UNTIL pagID <> 16#01
	END_REPEAT;

END_FUNCTION_BLOCK

	(***************************)
	(*                         *)
	(* PARAMETER  FUN. BLOCKS  *)
	(*                         *)
	(***************************)

